{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Provider } from 'react-redux';\nimport { auth } from \"./firebase/config\";\nimport RegisterScreen from \"./src/screens/auth/RegisterScreen\";\nimport LogInScreen from \"./src/screens/auth/LogInScreen\";\nimport { content } from \"./src/navigation/AppNavigation\";\nimport { store } from \"./redux/store\";\nimport { AppLoading } from \"expo\";\nimport { loadApplication } from \"./src/loadApplication/loadApp\";\nvar Stack = createStackNavigator();\n\nvar useRoute = function useRoute(isAuth) {\n  if (isAuth) {\n    return content;\n  }\n\n  return React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LogIn\",\n    component: LogInScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setIsAuth = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: loadApplication,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError() {\n        return console.error();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n  useEffect(function () {\n    AuthStateChanged();\n  }, []);\n\n  var AuthStateChanged = function AuthStateChanged() {\n    return _regeneratorRuntime.async(function AuthStateChanged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n              console.log(\"user\", user);\n              setIsAuth(user);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var routing = useRoute(isAuth);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, routing));\n}","map":{"version":3,"sources":["/Users/galocka/rn-social/App.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","Provider","auth","RegisterScreen","LogInScreen","content","store","AppLoading","loadApplication","Stack","useRoute","isAuth","App","setIsAuth","isReady","setIsReady","console","error","AuthStateChanged","onAuthStateChanged","user","log","routing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,SAASC,IAAT;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,SAASC,OAAT;AACA,SAAQC,KAAR;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,eAAT;AAEA,IAAMC,KAAK,GAAGT,oBAAoB,EAAlC;;AAEA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC3B,MAAIA,MAAJ,EAAY;AACV,WAAON,OAAP;AACD;;AACD,SACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEF,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAVD;;AAYA,eAAe,SAASQ,GAAT,GAAe;AAAA,kBACAf,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACrBc,MADqB;AAAA,MACbE,SADa;;AAAA,mBAEEhB,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBiB,OAFqB;AAAA,MAEZC,UAFY;;AAI5B,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEN,eADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMO,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,KAAR,EAAN;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAEDnB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACjBhB,IAAI,CAACiB,kBAAL,CAAwB,UAACC,IAAD,EAAU;AACtCJ,cAAAA,OAAO,CAACK,GAAR,CAAY,MAAZ,EAAoBD,IAApB;AACAP,cAAAA,SAAS,CAACO,IAAD,CAAT;AACD,aAHK,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAYA,MAAME,OAAO,GAAGZ,QAAQ,CAACC,MAAD,CAAxB;AACA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,OADH,CADA,CADF;AAOD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport {Provider} from 'react-redux'\n\nimport { auth } from \"./firebase/config\";\nimport RegisterScreen from \"./src/screens/auth/RegisterScreen\";\nimport LogInScreen from \"./src/screens/auth/LogInScreen\";\nimport { content } from \"./src/navigation/AppNavigation\";\nimport {store} from './redux/store'\n\nimport { AppLoading } from \"expo\";\nimport { loadApplication } from \"./src/loadApplication/loadApp\";\n\nconst Stack = createStackNavigator();\n\nconst useRoute = (isAuth) => {\n  if (isAuth) {\n    return content;\n  }\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n      <Stack.Screen name=\"LogIn\" component={LogInScreen} />\n    </Stack.Navigator>\n  );\n};\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={loadApplication}\n        onFinish={() => setIsReady(true)}\n        onError={() => console.error()}\n      />\n    );\n  }\n\n  useEffect(() => {\n    AuthStateChanged();\n  }, []);\n\n  const AuthStateChanged = async () => {\n    await auth.onAuthStateChanged((user) => {\n      console.log(\"user\", user);\n      setIsAuth(user);\n    });\n  };\n\n  // auth.onAuthStateChanged((user) => {\n  //   // console.log(\"onAuthStateChanged\", user);\n  //   setIsAuth(true);\n  // });\n\n  const routing = useRoute(isAuth);\n  return (\n    <Provider store={store}>\n    <NavigationContainer>\n      {routing}\n    </NavigationContainer>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}