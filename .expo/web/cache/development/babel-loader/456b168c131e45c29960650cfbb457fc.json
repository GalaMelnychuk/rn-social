{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/tab/HomeScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\nexport default function HomeScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allPosts = _useState2[0],\n      setAllPosts = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userPosts = _useSelector.userPosts;\n\n  useEffect(function () {\n    currentUser();\n    getAllPosts();\n  }, [userId]);\n\n  var currentUser = function currentUser() {\n    var currentUser;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            dispatch({\n              type: \"CURRENT_USER\",\n              payload: {\n                userName: currentUser.displayName,\n                userId: currentUser.uid\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(auth.signOut());\n\n          case 2:\n            dispatch({\n              type: \"USER_SIGNOUT\"\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllPosts = function getAllPosts() {\n    var dataPosts, allUserPosts;\n    return _regeneratorRuntime.async(function getAllPosts$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").where(\"userId\", \"==\", userId).onSnapshot(function (data) {\n              return setAllPosts(data.docs.map(function (doc) {\n                return doc.data();\n              }));\n            }));\n\n          case 2:\n            dataPosts = _context3.sent;\n            allUserPosts = dataPosts.docs.map(function (doc) {\n              return doc.data();\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: allPosts,\n    renderItem: function renderItem(_ref) {\n      var post = _ref.post;\n      return React.createElement(Post, {\n        item: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nvar stylesText = StyleSheet.create({\n  tex: {\n    color: \"blue\",\n    fontSize: 70,\n    marginBottom: 20,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/tab/HomeScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styles","auth","firestore","HomeScreen","dispatch","allPosts","setAllPosts","state","user","userId","userPosts","currentUser","getAllPosts","type","payload","userName","displayName","uid","signOut","collection","where","onSnapshot","data","docs","map","doc","dataPosts","allUserPosts","container","post","stylesText","StyleSheet","create","tex","color","fontSize","marginBottom","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Alert,\n  TouchableOpacity,\n  Keyboard,\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const [allPosts, setAllPosts] = useState([]);\n  const {userId, userPosts} = useSelector((state) => state.user);\n\n  useEffect(() => {\n    currentUser();\n    getAllPosts();\n  }, [userId]);\n\n  // useEffect(() => {\n  //   getAllPosts();\n  // }, [userPosts]);\n\n  // взять информацию (ид-юзера, и т.д.) текущего юзера\n  const currentUser = async () => {\n    const currentUser = await auth.currentUser;\n    dispatch({\n      type: \"CURRENT_USER\",\n      payload: { userName: currentUser.displayName, userId: currentUser.uid },\n    });\n  \n  };\n\n  const signOut = async () => {\n    await auth.signOut();\n    dispatch({ type: \"USER_SIGNOUT\" });\n  };\n\n  const getAllPosts = async () => {\n    const dataPosts = await firestore\n      .collection(\"posts\")\n      .where(\"userId\", \"==\", userId)\n      .onSnapshot((data) => setAllPosts(data.docs.map((doc) => doc.data())));\n    const allUserPosts = dataPosts.docs.map((doc) => doc.data());\n    // console.log(\"allPosts\", allUserPosts);\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n     \n        <FlatList\n          // keyExtractor={(todo) => todo.id}\n          data={allPosts}\n          renderItem={({ post }) => (\n            <Post\n              item={post}\n\n            />\n          )}\n        />\n     \n      </View>\n    </>\n  );\n}\n\nconst stylesText = StyleSheet.create({\n  tex: {\n    color: \"blue\",\n    fontSize: 70,\n    marginBottom: 20,\n    // marginHorizontal: 80,\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}