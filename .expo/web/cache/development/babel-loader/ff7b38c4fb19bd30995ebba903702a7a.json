{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/auth/LogInScreen.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { styles } from \"../../../Styles\";\nimport { auth } from \"../../../firebase/config\";\nexport default function LogInScreen(_ref) {\n  var navigate = _ref.navigation.navigate;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var resetInputs = function resetInputs() {\n    return setEmail(\"\"), setPassword(\"\");\n  };\n\n  var logInUser = function logInUser() {\n    var user;\n    return _regeneratorRuntime.async(function logInUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 3:\n            user = _context.sent;\n            resetInputs();\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.Os == \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Email*\"), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    style: styles.input,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Password*\"), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    style: styles.input,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: logInUser,\n    activeOpacity: 0.5,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Log In\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigate(\"Register\");\n    },\n    activeOpacity: 0.5,\n    style: styles.button,\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n}\n;","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/auth/LogInScreen.js"],"names":["React","useState","styles","auth","LogInScreen","navigate","navigation","email","setEmail","password","setPassword","resetInputs","logInUser","signInWithEmailAndPassword","user","console","log","Platform","Os","container","text","input","value","button","buttonTitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Alert,\n  TouchableOpacity,\n  Keyboard,\n  Text,\n  View,\n  Button,\n  TextInput, KeyboardAvoidingView, Platform\n} from \"react-native\";\nimport { styles } from \"../../../Styles\";\nimport {auth} from '../../../firebase/config'\n\nexport default function LogInScreen({ navigation: {navigate} }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetInputs = () => (setEmail(\"\"), setPassword(\"\"));\n\n// логанизация юзера\n  const logInUser = async () => {\n    try {\n      const user = await \n        auth.signInWithEmailAndPassword(email, password);\n      resetInputs();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.Os == \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n    >\n      <View>\n        <Text style={styles.text}>Email*</Text>\n        <TextInput\n          autoCapitalize={\"none\"}\n          autoCorrect={false}\n          style={styles.input}\n          onChangeText={value => setEmail(value)}\n          value={email}\n        />\n        <Text style={styles.text}>Password*</Text>\n        <TextInput\n          autoCapitalize={\"none\"}\n          autoCorrect={false}\n          style={styles.input}\n          secureTextEntry={true}\n          onChangeText={value => setPassword(value)}\n          value={password}\n        />\n{/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */}\n        <TouchableOpacity\n          onPress={logInUser}\n          activeOpacity={0.5}\n          style={styles.button}\n        >\n          <Text style={styles.buttonTitle}>Log In</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigate(\"Register\")}\n          activeOpacity={0.5}\n          style={styles.button}\n          style={styles.buttonTitle}\n        >\n          <Text style={styles.buttonTitle}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};"]},"metadata":{},"sourceType":"module"}