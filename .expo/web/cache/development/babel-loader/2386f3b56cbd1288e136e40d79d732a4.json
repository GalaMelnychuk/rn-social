{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/tab/AddPostScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { Camera } from \"expo-camera\";\nimport * as Location from 'expo-location';\nimport { firestore } from \"../../../firebase/config\";\nimport { styles } from \"../../../Styles\";\nexport default function AddPostScreen() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userName = _useSelector.userName;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      takePhoto = _useState6[0],\n      setTakePhoto = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      picture = _useState8[0],\n      setPicture = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorMsg = _useState12[0],\n      setErrorMsg = _useState12[1];\n\n  var snap = function snap() {\n    var photo;\n    return _regeneratorRuntime.async(function snap$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!takePhoto) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(takePhoto.takePictureAsync());\n\n          case 3:\n            photo = _context.sent;\n            setPicture(photo.uri);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context2.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  useEffect(function () {\n    (function _callee2() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context3.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                console.log('Permission to access location was denied');\n              }\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context3.sent;\n              setLocation(location);\n              console.log('location', location);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  return React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, picture ? React.createElement(Image, {\n    source: {\n      uri: picture\n    },\n    style: {\n      width: 350,\n      height: 200,\n      margin: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }) : React.createElement(Camera, {\n    ref: function ref(_ref) {\n      return setTakePhoto(_ref);\n    },\n    style: {\n      width: 360,\n      height: 220,\n      margin: 4\n    },\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"transparent\",\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0.1,\n      alignSelf: \"flex-end\",\n      alignItems: \"center\"\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Flip\")))), React.createElement(TouchableOpacity, {\n    style: {},\n    onPress: snap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"take Photo!!\")), React.createElement(TouchableOpacity, {\n    style: {},\n    onPress: function onPress() {\n      return setPicture('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"once more take Photo!!\")));\n}","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/tab/AddPostScreen.js"],"names":["React","useState","useEffect","useSelector","Camera","Location","firestore","styles","AddPostScreen","state","user","userId","userName","hasPermission","setHasPermission","Constants","Type","back","type","setType","takePhoto","setTakePhoto","picture","setPicture","location","setLocation","errorMsg","setErrorMsg","snap","takePictureAsync","photo","uri","requestPermissionsAsync","status","console","log","getCurrentPositionAsync","text","JSON","stringify","justifyContent","alignItems","width","height","margin","ref","flex","backgroundColor","flexDirection","alignSelf","front","fontSize","marginBottom","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TouchableOpacity, Text, View, Image } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { Camera } from \"expo-camera\";\nimport * as Location from 'expo-location';\nimport { firestore } from \"../../../firebase/config\";\nimport { styles } from \"../../../Styles\";\n\nexport default function AddPostScreen() {\n  const { userId, userName } = useSelector((state) => state.user);\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [takePhoto, setTakePhoto] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const snap = async () => {\n    if (takePhoto) {\n      let photo = await takePhoto.takePictureAsync();\n      setPicture(photo.uri);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  \n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        console.log('Permission to access location was denied');\n      }\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location)\n      console.log('location', location)\n    })();\n  });\n\n  let text = 'Waiting..';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  return (\n    <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n    { picture ? <Image\n      source={{uri: picture}}\n      style={{ width: 350, height: 200, margin: 4 }}\n    /> :\n      <Camera\n        ref={(ref) => setTakePhoto(ref)}\n        style={{ width: 360, height: 220, margin: 4 }}\n        type={type}\n      >\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: \"transparent\",\n            flexDirection: \"row\",\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: \"flex-end\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}\n          >\n            <Text style={{ fontSize: 18, marginBottom: 10, color: \"white\" }}>\n              Flip\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>}\n      <TouchableOpacity style={{}} onPress={snap}>\n        <Text style={{ fontSize: 18, marginBottom: 10, color: \"#000\" }}>\n          take Photo!!\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={{}} onPress={()=> setPicture('')}>\n        <Text style={{ fontSize: 18, marginBottom: 10, color: \"#000\" }}>\n          once more take Photo!!\n        </Text>\n       \n      {/* <Text>{text}</Text> */}\n    \n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}