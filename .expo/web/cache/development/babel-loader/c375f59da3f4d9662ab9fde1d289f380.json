{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/tab/HomeScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\nexport default function HomeScreen() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userPosts = _useSelector.userPosts;\n\n  useEffect(function () {\n    currentUser();\n  }, [userId]);\n\n  var currentUser = function currentUser() {\n    var currentUser, dataPosts, allUserPosts;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").where(\"userId\", \"==\", userId).get());\n\n          case 5:\n            dataPosts = _context.sent;\n            allUserPosts = dataPosts.docs.map(function (doc) {\n              return doc.data();\n            });\n            console.log(\"allPosts\", allUserPosts);\n            dispatch({\n              type: \"CURRENT_USER\",\n              payload: {\n                userName: currentUser.displayName,\n                userId: currentUser.uid,\n                userPosts: allUserPosts\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(auth.signOut());\n\n          case 2:\n            dispatch({\n              type: \"USER_SIGNOUT\"\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Hello, my old friend ;)! What kind of news are you intrested in now?\"), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 100,\n      borderColor: \"green\",\n      borderWidth: 1,\n      padding: 10,\n      borderRadius: 10\n    },\n    onPress: signOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"SignOut\"))));\n}\nvar stylesText = StyleSheet.create({\n  tex: {\n    color: \"blue\",\n    fontSize: 70,\n    marginBottom: 20,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/tab/HomeScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styles","auth","firestore","HomeScreen","dispatch","state","user","userId","userPosts","currentUser","collection","where","get","dataPosts","allUserPosts","docs","map","doc","data","console","log","type","payload","userName","displayName","uid","signOut","container","text","marginTop","borderColor","borderWidth","padding","borderRadius","stylesText","StyleSheet","create","tex","color","fontSize","marginBottom","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAUA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT;AACA,SAASC,IAAT,EAAeC,SAAf;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADmC,qBAEPC,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFJ;AAAA,MAE5BC,MAF4B,gBAE5BA,MAF4B;AAAA,MAEpBC,SAFoB,gBAEpBA,SAFoB;;AAInCX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;AASA,MAAME,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQR,IAAI,CAACQ,WADb;;AAAA;AACZA,YAAAA,WADY;AAAA;AAAA,6CAEQP,SAAS,CAC9BQ,UADqB,CACV,OADU,EAErBC,KAFqB,CAEf,QAFe,EAEL,IAFK,EAECJ,MAFD,EAGrBK,GAHqB,EAFR;;AAAA;AAEVC,YAAAA,SAFU;AAMVC,YAAAA,YANU,GAMKD,SAAS,CAACE,IAAV,CAAeC,GAAf,CAAmB,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,aAAnB,CANL;AAOhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,YAAxB;AAEFV,YAAAA,QAAQ,CAAC;AACPiB,cAAAA,IAAI,EAAE,cADC;AAEPC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,QAAQ,EAAEd,WAAW,CAACe,WAAxB;AAAqCjB,gBAAAA,MAAM,EAAEE,WAAW,CAACgB,GAAzD;AAA8DjB,gBAAAA,SAAS,EAAEM;AAAzE;AAFF,aAAD,CAAR;;AATkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAgBA,MAAMY,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRzB,IAAI,CAACyB,OAAL,EADQ;;AAAA;AAEdtB,YAAAA,QAAQ,CAAC;AAAEiB,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAcA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAAC2B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EADF,EAIE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,GADN;AAELC,MAAAA,WAAW,EAAE,OAFR;AAGLC,MAAAA,WAAW,EAAE,CAHR;AAILC,MAAAA,OAAO,EAAE,EAJJ;AAKLC,MAAAA,YAAY,EAAE;AALT,KADT;AAQE,IAAA,OAAO,EAAEP,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CAJF,CADF,CADF;AAqBD;AAED,IAAMQ,UAAU,GAAGC,UAAU,CAACC,MAAX,CAAkB;AACnCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,YAAY,EAAE,EAHX;AAKHC,IAAAA,UAAU,EAAE;AALT;AAD8B,CAAlB,CAAnB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Alert,\n  TouchableOpacity,\n  Keyboard,\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const {userId, userPosts} = useSelector((state) => state.user);\n\n  useEffect(() => {\n    currentUser();\n  }, [userId]);\n\n  // useEffect(() => {\n  //   getAllPosts();\n  // }, [userPosts]);\n\n  // взять информацию (ид-юзера, и т.д.) текущего юзера\n  const currentUser = async () => {\n    const currentUser = await auth.currentUser;\n      const dataPosts = await firestore\n        .collection(\"posts\")\n        .where(\"userId\", \"==\", userId)\n        .get();\n      const allUserPosts = dataPosts.docs.map((doc) => doc.data());\n      console.log(\"allPosts\", allUserPosts);\n\n    dispatch({\n      type: \"CURRENT_USER\",\n      payload: { userName: currentUser.displayName, userId: currentUser.uid, userPosts: allUserPosts },\n    });\n  \n  };\n\n  const signOut = async () => {\n    await auth.signOut();\n    dispatch({ type: \"USER_SIGNOUT\" });\n  };\n\n  // const getAllPosts = async () => {\n  //   const dataPosts = await firestore\n  //     .collection(\"posts\")\n  //     .where(\"userId\", \"==\", id)\n  //     .get();\n  //   const allUserPosts = dataPosts.docs.map((doc) => doc.data());\n  //   // console.log(\"allPosts\", allUserPosts);\n  // };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Text style={styles.text}>\n          Hello, my old friend ;)! What kind of news are you intrested in now?\n        </Text>\n        <TouchableOpacity\n          style={{\n            marginTop: 100,\n            borderColor: \"green\",\n            borderWidth: 1,\n            padding: 10,\n            borderRadius: 10,\n          }}\n          onPress={signOut}\n        >\n          <Text>SignOut</Text>\n        </TouchableOpacity>\n      </View>\n    </>\n  );\n}\n\nconst stylesText = StyleSheet.create({\n  tex: {\n    color: \"blue\",\n    fontSize: 70,\n    marginBottom: 20,\n    // marginHorizontal: 80,\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}