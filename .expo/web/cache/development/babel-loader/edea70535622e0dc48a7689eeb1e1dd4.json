{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/tab/AddPostScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"react-redux\";\nimport { Camera } from \"expo-camera\";\nimport { firestore } from \"../../../firebase/config\";\nimport { styles } from \"../../../Styles\";\nexport default function AddPostScreen() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userName = _useSelector.userName;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Camera, {\n    style: {\n      width: 360,\n      height: 400\n    },\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0.1,\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \" Flip \")))), React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0.1,\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \" Click!! \")));\n}","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/tab/AddPostScreen.js"],"names":["React","useState","useEffect","useSelector","Camera","firestore","styles","AddPostScreen","state","user","userId","userName","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","justifyContent","alignItems","width","height","flex","backgroundColor","flexDirection","alignSelf","front","fontSize","marginBottom","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TouchableOpacity,\n  Text,\n  View\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { Camera } from \"expo-camera\";\nimport { firestore } from \"../../../firebase/config\";\nimport { styles } from \"../../../Styles\";\n\nexport default function AddPostScreen() {\n  const { userId, userName } = useSelector((state) => state.user);\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  // return (\n  //   <View style= {{justifyContent: \"center\", alignItems:\"center\"}}>\n  //     <Text>CreateScreen</Text>\n  //     <Camera style={{width: 360, height: 400}} type={Camera.Constants.Type.back}></Camera>\n  //   </View>\n\n  // );\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style= {{justifyContent: \"center\", alignItems:\"center\"}}>\n      <Camera style={{width: 360, height: 400}} type={type}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            flexDirection: 'row',\n          }}>\n          <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: 'flex-end',\n              alignItems: 'center',\n            }}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}>\n            <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n      <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: 'flex-end',\n              alignItems: 'center',\n            }}>\n            {/* // onPress={() => } */}\n            <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Click!! </Text>\n          </TouchableOpacity>\n    </View>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}