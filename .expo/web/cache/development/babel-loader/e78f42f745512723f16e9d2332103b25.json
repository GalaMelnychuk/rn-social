{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/src/screens/tab/HomeScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\nimport Post from \"../../components/Post\";\nexport default function HomeScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allPosts = _useState2[0],\n      setAllPosts = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userPosts = _useSelector.userPosts;\n\n  useEffect(function () {\n    currentUser();\n  }, [userId]);\n\n  var currentUser = function currentUser() {\n    var currentUser, data;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").onSnapshot(function (data) {\n              return setAllPosts(data.docs.map(function (doc) {\n                return doc.data();\n              }));\n            }));\n\n          case 5:\n            data = _context.sent;\n            dispatch({\n              type: \"CURRENT_USER\",\n              payload: {\n                userName: currentUser.displayName,\n                userId: currentUser.uid\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, idx) {\n      return idx.toString();\n    },\n    data: allPosts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Post, {\n        post: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 37\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/galocka/rn-social/src/screens/tab/HomeScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styles","auth","firestore","Post","HomeScreen","dispatch","allPosts","setAllPosts","state","user","userId","userPosts","currentUser","collection","onSnapshot","data","docs","map","doc","type","payload","userName","displayName","uid","container","item","idx","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT;AACA,SAASC,IAAT,EAAeC,SAAf;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADmC,kBAEHF,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,MAE5BU,QAF4B;AAAA,MAElBC,WAFkB;;AAAA,qBAGLR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHN;AAAA,MAG3BC,MAH2B,gBAG3BA,MAH2B;AAAA,MAGnBC,SAHmB,gBAGnBA,SAHmB;;AAKnCd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;AASA,MAAME,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQX,IAAI,CAACW,WADb;;AAAA;AACZA,YAAAA,WADY;AAAA;AAAA,6CAECV,SAAS,CACzBW,UADgB,CACL,OADK,EAEhBC,UAFgB,CAEL,UAACC,IAAD;AAAA,qBAAUR,WAAW,CAACQ,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACH,IAAJ,EAAT;AAAA,eAAd,CAAD,CAArB;AAAA,aAFK,CAFD;;AAAA;AAEZA,YAAAA,IAFY;AAKlBV,YAAAA,QAAQ,CAAC;AACPc,cAAAA,IAAI,EAAE,cADC;AAEPC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,QAAQ,EAAET,WAAW,CAACU,WAAxB;AAAqCZ,gBAAAA,MAAM,EAAEE,WAAW,CAACW;AAAzD;AAFF,aAAD,CAAR;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAWA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,GAAP;AAAA,aAAeA,GAAG,CAACC,QAAJ,EAAf;AAAA,KADhB;AAEE,IAAA,IAAI,EAAErB,QAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGmB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  FlatList,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styles } from \"../../../Styles\";\nimport { auth, firestore } from \"../../../firebase/config\";\nimport Post from '../../components/Post';\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const [allPosts, setAllPosts] = useState([]);\n  const { userId, userPosts } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    currentUser();\n  }, [userId]);\n\n  // useEffect(() => {\n  //   getAllPosts();\n  // }, [userPosts]);\n\n  // взять информацию (ид-юзера, и т.д.) текущего юзера\n  const currentUser = async () => {\n    const currentUser = await auth.currentUser;\n    const data = await firestore\n      .collection(\"posts\")\n      .onSnapshot((data) => setAllPosts(data.docs.map((doc) => doc.data())));\n    dispatch({\n      type: \"CURRENT_USER\",\n      payload: { userName: currentUser.displayName, userId: currentUser.uid },\n    });\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <FlatList\n          keyExtractor={(item, idx) => idx.toString()}\n          data={allPosts}\n          renderItem={({ item }) =>(<Post post={item} />)}\n        />\n      </View>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}