{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { configureStore, combineReducers, createReducer } from \"@reduxjs/toolkit\";\nvar initialState = {\n  userName: null,\n  userId: null,\n  userPosts: []\n};\nvar reducer = {\n  CURRENT_USER: function CURRENT_USER(state, _ref) {\n    var payload = _ref.payload;\n    return _objectSpread({}, state, {\n      userName: payload.userName,\n      userId: payload.userId\n    });\n  }\n};\nvar user = createReducer(initialState, reducer);\nvar rootReduser = combineReducers({\n  user: user\n});\nexport var store = configureStore({\n  reducer: rootReduser\n});","map":{"version":3,"sources":["/Users/galocka/rn-social/redux/store.js"],"names":["configureStore","combineReducers","createReducer","initialState","userName","userId","userPosts","reducer","CURRENT_USER","state","payload","user","rootReduser","store"],"mappings":";;;;;;AAAA,SAAQA,cAAR,EAAwBC,eAAxB,EAAyCC,aAAzC,QAA6D,kBAA7D;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;AAKA,IAAMC,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,QAASC,OAAT,QAASA,OAAT;AAAA,6BAA2BD,KAA3B;AAAkCL,MAAAA,QAAQ,EAAEM,OAAO,CAACN,QAApD;AAA8DC,MAAAA,MAAM,EAAEK,OAAO,CAACL;AAA9E;AAAA;AADF,CAAhB;AAIA,IAAMM,IAAI,GAAGT,aAAa,CAACC,YAAD,EAAeI,OAAf,CAA1B;AAEA,IAAMK,WAAW,GAAGX,eAAe,CAAC;AAChCU,EAAAA,IAAI,EAAEA;AAD0B,CAAD,CAAnC;AAIA,OAAO,IAAME,KAAK,GAAGb,cAAc,CAAC;AAChCO,EAAAA,OAAO,EAAEK;AADuB,CAAD,CAA5B","sourcesContent":["import {configureStore, combineReducers, createReducer} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    userName: null,\n    userId: null,\n    userPosts: []\n}\nconst reducer = {\n    CURRENT_USER: (state, {payload}) => ({...state, userName: payload.userName, userId: payload.userId })\n};\n\nconst user = createReducer(initialState, reducer)\n\nconst rootReduser = combineReducers({\n    user: user\n});\n\nexport const store = configureStore({\n    reducer: rootReduser,\n})"]},"metadata":{},"sourceType":"module"}