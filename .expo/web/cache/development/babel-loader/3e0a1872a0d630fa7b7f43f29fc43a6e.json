{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/galocka/rn-social/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport LogInScreen from \"./components/screens/LogInScreen\";\nimport HomeScreen from \"./components/screens/HomeScreen\";\nimport ProfileScreen from \"./components/screens/ProfileScreen\";\nimport PostsScreen from \"./components/screens/PostsScreen\";\nimport AddPostScreen from \"./components/screens/AddPostScreen\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar content = React.createElement(Tab.Navigator, {\n  tabBarOptions: {\n    showLabel: false\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }\n}, React.createElement(Tab.Screen, {\n  options: {\n    tabBarIcon: function tabBarIcon(_ref) {\n      var focused = _ref.focused,\n          size = _ref.size,\n          color = _ref.color;\n      return React.createElement(Ionicons, {\n        name: \"ios-home\",\n        size: focused ? 42 : 40,\n        color: focused ? \"#ff1493\" : \"#808080\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }\n      });\n    }\n  },\n  name: \"Home\",\n  component: HomeScreen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 1\n  }\n}), React.createElement(Tab.Screen, {\n  options: {\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var focused = _ref2.focused,\n          size = _ref2.size,\n          color = _ref2.color;\n      return React.createElement(Ionicons, {\n        name: \"ios-body\",\n        size: focused ? 42 : 40,\n        color: focused ? \"#ff1493\" : \"#808080\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      });\n    }\n  },\n  name: \"Profile\",\n  component: ProfileScreen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }\n}), React.createElement(Tab.Screen, {\n  options: {\n    tabBarIcon: function tabBarIcon(_ref3) {\n      var focused = _ref3.focused,\n          size = _ref3.size,\n          color = _ref3.color;\n      return React.createElement(Ionicons, {\n        name: \"ios-book\",\n        size: focused ? 42 : 40,\n        color: focused ? \"#ff1493\" : \"#808080\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }\n      });\n    }\n  },\n  name: \"Posts\",\n  component: PostsScreen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 1\n  }\n}), React.createElement(Tab.Screen, {\n  options: {\n    tabBarIcon: function tabBarIcon(_ref4) {\n      var focused = _ref4.focused,\n          size = _ref4.size,\n          color = _ref4.color;\n      return React.createElement(Ionicons, {\n        name: \"md-color-filter\",\n        size: focused ? 42 : 40,\n        color: focused ? \"#ff1493\" : \"#808080\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }\n      });\n    }\n  },\n  name: \"AddPost\",\n  component: AddPostScreen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }\n}));\n\nvar useRoute = function useRoute(isAuth, isRegister) {\n  if (isAuth && isRegister) {\n    return content;\n  } else if (isRegister) {\n    return content = React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: LogInScreen,\n      onPress: function onPress() {\n        return navigation.navigate(\"Home\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return content = React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setIsAuth = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRegister = _useState4[0],\n      setRegister = _useState4[1];\n\n  var routing = useRoute(true, true);\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }, routing);\n}","map":{"version":3,"sources":["/Users/galocka/rn-social/App.js"],"names":["React","useState","NavigationContainer","createStackNavigator","Ionicons","createBottomTabNavigator","RegisterScreen","LogInScreen","HomeScreen","ProfileScreen","PostsScreen","AddPostScreen","Stack","Tab","content","showLabel","tabBarIcon","focused","size","color","useRoute","isAuth","isRegister","navigation","navigate","App","setIsAuth","setRegister","routing"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Alert, TouchableOpacity, Keyboard, Text, View, Button, TextInput } from 'react-native';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport RegisterScreen from './components/screens/RegisterScreen';\nimport LogInScreen from './components/screens/LogInScreen';\nimport HomeScreen from './components/screens/HomeScreen';\nimport ProfileScreen from './components/screens/ProfileScreen';\nimport PostsScreen from './components/screens/PostsScreen';\nimport AddPostScreen from './components/screens/AddPostScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nlet content =  (\n<Tab.Navigator tabBarOptions={{\n      showLabel: false,\n    }}>\n<Tab.Screen options={{\n   tabBarIcon: ({ focused, size, color }) => (\n     <Ionicons\n       name=\"ios-home\"\n       size={focused ? 42 : 40}\n       color={focused ? \"#ff1493\" : \"#808080\"}\n     />\n   ),\n }} name=\"Home\" component={HomeScreen} />\n<Tab.Screen options={{\n      tabBarIcon: ({ focused, size, color }) => (\n        <Ionicons\n          name=\"ios-body\"\n          size={focused ? 42 : 40}\n          color={focused ? \"#ff1493\" : \"#808080\"}\n        /> ),\n      }}\n        \n        name=\"Profile\" component={ProfileScreen} />\n<Tab.Screen options={{\n   tabBarIcon: ({ focused, size, color }) => (\n     <Ionicons\n       name=\"ios-book\"\n       size={focused ? 42 : 40}\n       color={focused ? \"#ff1493\" : \"#808080\"}\n     />\n   ),\n }} name=\"Posts\" component={PostsScreen} />\n<Tab.Screen options={{\n   tabBarIcon: ({ focused, size, color }) => (\n     <Ionicons\n       name=\"md-color-filter\"\n       size={focused ? 42 : 40}\n       color={focused ? \"#ff1493\" : \"#808080\"}\n     />\n   ),\n }} name=\"AddPost\" component={AddPostScreen} />\n</Tab.Navigator>\n);\n\n\nconst useRoute = (isAuth, isRegister) => {\n  if (isAuth && isRegister) {\n    return content;\n  } else if (isRegister) {\n    return (content = (\n      <Stack.Navigator>\n        <Stack.Screen name=\"Login\" component={LogInScreen} onPress={() => navigation.navigate(\"Home\")} />\n      </Stack.Navigator>\n    ));\n  }\n  return (content = (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  ));\n};\n\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(true);\n  const [isRegister, setRegister] = useState(true);\n\n  const routing = useRoute(true, true);\n  return <NavigationContainer>{routing}</NavigationContainer>;\n}"]},"metadata":{},"sourceType":"module"}